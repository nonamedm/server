{"version":3,"file":"static/js/590.45f76b27.chunk.js","mappings":"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","sources":["helpers/request.js","pages/shop/ShopGridStandard2.js","components/product/ShopSearch.js","components/product/ShopCategories.js","components/product/ShopTag.js","wrappers/product/ShopSidebar.js","components/product/ShopTopAction.js","wrappers/product/ShopTopbar.js"],"sourcesContent":["// get requests\r\n// export const getRequests = (requests, category, type, limit) => {\r\n//   const finalRequests = category\r\n//     ? requests.filter(\r\n//         request => request.filter(single => single === category)[0]\r\n//       )\r\n//     : requests;\r\n\r\n//   if (type && type === \"new\") {\r\n//     const newRequests = finalRequests.filter(single => single.new);\r\n//     return newRequests.slice(0, limit ? limit : newRequests.length);\r\n//   }\r\n//   if (type && type === \"bestSeller\") {\r\n//     return finalRequests\r\n//       .sort((a, b) => {\r\n//         return b.saleCount - a.saleCount;\r\n//       })\r\n//       .slice(0, limit ? limit : finalRequests.length);\r\n//   }\r\n//   if (type && type === \"saleItems\") {\r\n//     const saleItems = finalRequests.filter(\r\n//       single => single.discount && single.discount > 0\r\n//     );\r\n//     return saleItems.slice(0, limit ? limit : saleItems.length);\r\n//   }\r\n//   return finalRequests.slice(0, limit ? limit : finalRequests.length);\r\n// };\r\n\r\n// get request discount price\r\n// export const getDiscountPrice = (price, discount) => {\r\n//   return discount && discount > 0 ? price - price * (discount / 100) : null;\r\n// };\r\n\r\n// get request cart quantity\r\n// export const getRequestCartQuantity = (cartItems, request, color, size) => {\r\n//   let requestInCart = cartItems.find(\r\n//     single =>\r\n//       single.id === request.id &&\r\n//       (single.selectedRequestColor\r\n//         ? single.selectedRequestColor === color\r\n//         : true) &&\r\n//       (single.selectedRequestSize ? single.selectedRequestSize === size : true)\r\n//   );\r\n//   if (cartItems.length >= 1 && requestInCart) {\r\n//     if (request.variation) {\r\n//       return cartItems.find(\r\n//         single =>\r\n//           single.id === request.id &&\r\n//           single.selectedRequestColor === color &&\r\n//           single.selectedRequestSize === size\r\n//       ).quantity;\r\n//     } else {\r\n//       return cartItems.find(single => request.id === single.id).quantity;\r\n//     }\r\n//   } else {\r\n//     return 0;\r\n//   }\r\n// };\r\n\r\n// export const cartItemStock = (item, color, size) => {\r\n//   if (item.stock) {\r\n//     return item.stock;\r\n//   } else {\r\n//     return item.variation\r\n//       .filter(single => single.color === color)[0]\r\n//       .size.filter(single => single.name === size)[0].stock;\r\n//   }\r\n// };\r\n\r\n//get requests based on category\r\nexport const getSortedRequests = (requests, sortType, sortValue) => {\r\n  \r\n  if (requests && sortType && sortValue) {\r\n    if (sortType === \"category\") {\r\n      return requests.filter(\r\n        request => request.filter(single => single === sortValue)[0]\r\n      );\r\n    }\r\n    if (sortType === \"filterSort\") {\r\n      let sortRequests = [...requests];\r\n      if (sortValue === \"default\") {\r\n        return sortRequests;\r\n      }\r\n      if (sortValue === \"priceHighToLow\") {\r\n        console.log(requests);\r\n        return sortRequests.sort((a, b) => {\r\n          return b.price - a.price;\r\n        });\r\n      }\r\n      if (sortValue === \"priceLowToHigh\") {\r\n        return sortRequests.sort((a, b) => {\r\n          return a.price - b.price;\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return requests;\r\n};\r\n\r\n// get individual element\r\nconst getIndividualItemArray = array => {\r\n  let individualItemArray = array.filter(function(v, i, self) {\r\n    return i === self.indexOf(v);\r\n  });\r\n  return individualItemArray;\r\n};\r\n\r\n// get individual categories\r\nexport const getIndividualCategories = requests => {\r\n  let requestCategories = [];\r\n  requests &&\r\n    requests.map(request => {\r\n      return (\r\n        request.category &&\r\n        request.category.map(single => {\r\n          return requestCategories.push(single);\r\n        })\r\n      );\r\n    });\r\n  const individualRequestCategories = getIndividualItemArray(requestCategories);\r\n  return individualRequestCategories;\r\n};\r\n\r\n// get individual tags\r\nexport const getIndividualTags = requests => {\r\n  let requestTags = [];\r\n  requests &&\r\n    requests.map(request => {\r\n      return (\r\n        request.tag &&\r\n        request.tag.map(single => {\r\n          return requestTags.push(single);\r\n        })\r\n      );\r\n    });\r\n  const individualRequestTags = getIndividualItemArray(requestTags);\r\n  return individualRequestTags;\r\n};\r\n\r\n// get individual colors\r\nexport const getIndividualColors = requests => {\r\n  let requestColors = [];\r\n  requests &&\r\n    requests.map(request => {\r\n      return (\r\n        request.variation &&\r\n        request.variation.map(single => {\r\n          return requestColors.push(single.color);\r\n        })\r\n      );\r\n    });\r\n  const individualRequestColors = getIndividualItemArray(requestColors);\r\n  return individualRequestColors;\r\n};\r\n\r\n// get individual sizes\r\nexport const getRequestsIndividualSizes = requests => {\r\n  let requestSizes = [];\r\n  requests &&\r\n    requests.map(request => {\r\n      return (\r\n        request.variation &&\r\n        request.variation.map(single => {\r\n          /*return single.size.map(single => {\r\n            return requestSizes.push(single.name);\r\n          });*/\r\n        })\r\n      );\r\n    });\r\n  const individualRequestSizes = getIndividualItemArray(requestSizes);\r\n  return individualRequestSizes;\r\n};\r\n\r\n// get request individual sizes\r\nexport const getIndividualSizes = request => {\r\n  let requestSizes = [];\r\n  request.variation &&\r\n    request.variation.map(singleVariation => {\r\n      return (\r\n        singleVariation.size &&\r\n        singleVariation.size.map(singleSize => {\r\n          return requestSizes.push(singleSize.name);\r\n        })\r\n      );\r\n    });\r\n  const individualSizes = getIndividualItemArray(requestSizes);\r\n  return individualSizes;\r\n};\r\n\r\nexport const setActiveSort = e => {\r\n  const filterButtons = document.querySelectorAll(\r\n    \".sidebar-widget-list-left button, .sidebar-widget-tag button, .request-filter button\"\r\n  );\r\n  filterButtons.forEach(item => {\r\n    item.classList.remove(\"active\");\r\n  });\r\n  e.currentTarget.classList.add(\"active\");\r\n};\r\n\r\nexport const setActiveLayout = e => {\r\n  const gridSwitchBtn = document.querySelectorAll(\".shop-tab button\");\r\n  gridSwitchBtn.forEach(item => {\r\n    item.classList.remove(\"active\");\r\n  });\r\n  e.currentTarget.classList.add(\"active\");\r\n};\r\n\r\nexport const toggleShopTopFilter = e => {\r\n  const shopTopFilterWrapper = document.querySelector(\r\n    \"#request-filter-wrapper\"\r\n  );\r\n  shopTopFilterWrapper.classList.toggle(\"active\");\r\n  if (shopTopFilterWrapper.style.height) {\r\n    shopTopFilterWrapper.style.height = null;\r\n  } else {\r\n    shopTopFilterWrapper.style.height =\r\n      shopTopFilterWrapper.scrollHeight + \"px\";\r\n  }\r\n  e.currentTarget.classList.toggle(\"active\");\r\n};\r\n","import { Fragment, useState, useEffect } from \"react\";\r\nimport Paginator from \"react-hooks-paginator\"; \r\nimport { useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { getSortedRequests } from \"../../helpers/request\";\r\nimport SEO from \"../../components/seo\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\r\nimport ShopSidebar from \"../../wrappers/product/ShopSidebar\";\r\nimport ShopTopbar from \"../../wrappers/product/ShopTopbar\";\r\nimport ShopProducts from \"../../wrappers/product/ShopProducts\";\r\n\r\nconst ShopGridTwoColumn = () => {\r\n  const [layout, setLayout] = useState(\"grid four-column\");\r\n  const [sortType, setSortType] = useState(\"\");\r\n  const [sortValue, setSortValue] = useState(\"\");\r\n  const [filterSortType, setFilterSortType] = useState(\"\");\r\n  const [filterSortValue, setFilterSortValue] = useState(\"\");\r\n  const [offset, setOffset] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [currentData, setCurrentData] = useState([]);\r\n  const [sortedRequests, setSortedProducts] = useState([]);\r\n  const { requests } = useSelector((state) => state.request);\r\n  \r\n  const pageLimit = 16;\r\n  let { pathname } = useLocation();\r\n\r\n  const getLayout = layout => {\r\n    setLayout(layout);\r\n  };\r\n\r\n  const getSortParams = (sortType, sortValue) => {\r\n    setSortType(sortType);\r\n    setSortValue(sortValue);\r\n  };\r\n\r\n  const getFilterSortParams = (sortType, sortValue) => {\r\n    setFilterSortType(sortType);\r\n    setFilterSortValue(sortValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let sortedRequests = getSortedRequests(requests, sortType, sortValue);\r\n    const filterSortedProducts = getSortedRequests(\r\n      sortedRequests,\r\n      filterSortType,\r\n      filterSortValue\r\n    );\r\n    sortedRequests = filterSortedProducts;\r\n    setSortedProducts(sortedRequests);\r\n    \r\n    setCurrentData(sortedRequests.slice(offset, offset + pageLimit));\r\n  }, [offset, requests, sortType, sortValue, filterSortType, filterSortValue]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <SEO\r\n        titleTemplate=\"Shop Page\"\r\n        description=\"Shop page of flone react minimalist eCommerce template.\"\r\n      />\r\n\r\n      <LayoutOne headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        <Breadcrumb \r\n          pages={[\r\n            {label: \"Home\", path: process.env.PUBLIC_URL + \"/\" },\r\n            {label: \"Shop\", path: process.env.PUBLIC_URL + pathname }\r\n          ]} \r\n        />\r\n\r\n        <div className=\"shop-area pt-95 pb-100\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3\">\r\n                {/* shop sidebar */}\r\n                <ShopSidebar\r\n                  requests={requests}\r\n                  getSortParams={getSortParams}\r\n                  sideSpaceClass=\"mr-30\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-9\">\r\n                {/* shop topbar default */}\r\n                <ShopTopbar\r\n                  getLayout={getLayout}\r\n                  getFilterSortParams={getFilterSortParams}\r\n                  productCount={requests.length}\r\n                  sortedProductCount={currentData.length}\r\n                />\r\n\r\n                {/* shop page content default */}\r\n                <ShopProducts layout={layout} requests={currentData} />\r\n\r\n                {/* shop product pagination */}\r\n                <div className=\"pro-pagination-style text-center mt-30\">\r\n                  <Paginator\r\n                    totalRecords={sortedRequests.length}\r\n                    pageLimit={pageLimit}\r\n                    pageNeighbours={2}\r\n                    setOffset={setOffset}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                    pageContainerClass=\"mb-0 mt-0\"\r\n                    pagePrevText=\"«\"\r\n                    pageNextText=\"»\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ShopGridTwoColumn;\r\n","\r\n\r\nconst ShopSearch = () => {\r\n  return (\r\n    <div className=\"sidebar-widget\">\r\n      <h4 className=\"pro-sidebar-title\">Search </h4>\r\n      <div className=\"pro-sidebar-search mb-50 mt-25\">\r\n        <form className=\"pro-sidebar-search-form\" action=\"#\">\r\n          <input type=\"text\" placeholder=\"Search here...\" />\r\n          <button>\r\n            <i className=\"pe-7s-search\" />\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShopSearch;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopCategories = ({ categories, getSortParams }) => {\r\n  return (\r\n    <div className=\"sidebar-widget\">\r\n      <h4 className=\"pro-sidebar-title\">Categories </h4>\r\n      <div className=\"sidebar-widget-list mt-30\">\r\n        {categories ? (\r\n          <ul>\r\n            <li>\r\n              <div className=\"sidebar-widget-list-left\">\r\n                <button\r\n                  onClick={e => {\r\n                    getSortParams(\"category\", \"\");\r\n                    setActiveSort(e);\r\n                  }}\r\n                >\r\n                  <span className=\"checkmark\" /> All Categories\r\n                </button>\r\n              </div>\r\n            </li>\r\n            {categories.map((category, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <div className=\"sidebar-widget-list-left\">\r\n                    <button\r\n                      onClick={e => {\r\n                        getSortParams(\"category\", category);\r\n                        setActiveSort(e);\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      <span className=\"checkmark\" /> {category}{\" \"}\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          \"No categories found\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopCategories.propTypes = {\r\n  categories: PropTypes.array,\r\n  getSortParams: PropTypes.func\r\n};\r\n\r\nexport default ShopCategories;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopTag = ({ tags, getSortParams }) => {\r\n  return (\r\n    <div className=\"sidebar-widget mt-50\">\r\n      <h4 className=\"pro-sidebar-title\">Tag </h4>\r\n      <div className=\"sidebar-widget-tag mt-25\">\r\n        {tags ? (\r\n          <ul>\r\n            {tags.map((tag, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <button\r\n                    onClick={e => {\r\n                      getSortParams(\"tag\", tag);\r\n                      setActiveSort(e);\r\n                    }}\r\n                  >\r\n                    {tag}\r\n                  </button>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          \"No tags found\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopTag.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  tags: PropTypes.array\r\n};\r\n\r\nexport default ShopTag;\r\n","import PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  getIndividualCategories,\r\n  getIndividualTags,\r\n  getIndividualColors,\r\n  getProductsIndividualSizes\r\n} from \"../../helpers/product\";\r\nimport ShopSearch from \"../../components/product/ShopSearch\";\r\nimport ShopCategories from \"../../components/product/ShopCategories\";\r\nimport ShopColor from \"../../components/product/ShopColor\";\r\nimport ShopSize from \"../../components/product/ShopSize\";\r\nimport ShopTag from \"../../components/product/ShopTag\";\r\n\r\nconst ShopSidebar = ({ products, getSortParams, sideSpaceClass }) => {\r\n  const uniqueCategories = getIndividualCategories(products);\r\n  const uniqueColors = getIndividualColors(products);\r\n  const uniqueSizes = getProductsIndividualSizes(products);\r\n  const uniqueTags = getIndividualTags(products);\r\n\r\n  return (\r\n    <div className={clsx(\"sidebar-style\", sideSpaceClass)}>\r\n      {/* shop search */}\r\n      <ShopSearch />\r\n\r\n      {/* filter by categories */}\r\n      <ShopCategories\r\n        categories={uniqueCategories}\r\n        getSortParams={getSortParams}\r\n      />\r\n\r\n      {/* filter by color */}\r\n      {/*<ShopColor colors={uniqueColors} getSortParams={getSortParams} />*/}\r\n\r\n      {/* filter by size */}\r\n      {/*<ShopSize sizes={uniqueSizes} getSortParams={getSortParams} />*/}\r\n\r\n      {/* filter by tag */}\r\n      <ShopTag tags={uniqueTags} getSortParams={getSortParams} />\r\n    </div>\r\n  );\r\n};\r\n\r\nShopSidebar.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  products: PropTypes.array,\r\n  sideSpaceClass: PropTypes.string\r\n};\r\n\r\nexport default ShopSidebar;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport { setActiveLayout } from \"../../helpers/product\";\r\n\r\nconst ShopTopAction = ({\r\n  getLayout,\r\n  getFilterSortParams,\r\n  productCount,\r\n  sortedProductCount\r\n}) => {\r\n  return (\r\n    <div className=\"shop-top-bar mb-35\">\r\n      <div className=\"select-shoing-wrap\">\r\n        <div className=\"shop-select\">\r\n          <select\r\n            onChange={e => getFilterSortParams(\"filterSort\", e.target.value)}\r\n          >\r\n            <option value=\"default\">Default</option>\r\n            <option value=\"priceHighToLow\">Price - High to Low</option>\r\n            <option value=\"priceLowToHigh\">Price - Low to High</option>\r\n          </select>\r\n        </div>\r\n        <p>\r\n          Showing {sortedProductCount} of {productCount} result\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"shop-tab\">\r\n        <button\r\n          onClick={e => {\r\n            getLayout(\"grid two-column\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-th-large\" />\r\n        </button>\r\n        <button className=\"active\"\r\n          onClick={e => {\r\n            getLayout(\"grid four-column\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-th\" />\r\n        </button>\r\n        <button\r\n          onClick={e => {\r\n            getLayout(\"list\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-list-ul\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopTopAction.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getLayout: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  sortedProductCount: PropTypes.number\r\n};\r\n\r\nexport default ShopTopAction;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport ShopTopAction from \"../../components/product/ShopTopAction\";\r\n\r\nconst ShopTopbar = ({\r\n  getLayout,\r\n  getFilterSortParams,\r\n  productCount,\r\n  sortedProductCount\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      {/* shop top action */}\r\n      <ShopTopAction\r\n        getLayout={getLayout}\r\n        getFilterSortParams={getFilterSortParams}\r\n        productCount={productCount}\r\n        sortedProductCount={sortedProductCount}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nShopTopbar.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getLayout: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  sortedProductCount: PropTypes.number\r\n};\r\n\r\nexport default ShopTopbar;\r\n"],"names":["getSortedRequests","requests","sortType","sortValue","filter","request","single","sortRequests","_toConsumableArray","console","log","sort","a","b","price","_useState","useState","_useState2","_slicedToArray","layout","setLayout","_useState3","_useState4","setSortType","_useState5","_useState6","setSortValue","_useState7","_useState8","filterSortType","setFilterSortType","_useState9","_useState10","filterSortValue","setFilterSortValue","_useState11","_useState12","offset","setOffset","_useState13","_useState14","currentPage","setCurrentPage","_useState15","_useState16","currentData","setCurrentData","_useState17","_useState18","sortedRequests","setSortedProducts","useSelector","state","pathname","useLocation","useEffect","filterSortedProducts","slice","_jsxs","Fragment","children","_jsx","SEO","titleTemplate","description","LayoutOne","headerTop","Breadcrumb","pages","label","path","process","className","ShopSidebar","getSortParams","sideSpaceClass","ShopTopbar","getLayout","getFilterSortParams","productCount","length","sortedProductCount","ShopProducts","Paginator","totalRecords","pageLimit","pageNeighbours","pageContainerClass","pagePrevText","pageNextText","action","type","placeholder","_ref","categories","onClick","e","setActiveSort","map","category","key","tags","tag","products","uniqueCategories","getIndividualCategories","uniqueTags","getIndividualColors","getProductsIndividualSizes","getIndividualTags","clsx","ShopSearch","ShopCategories","ShopTag","onChange","target","value","setActiveLayout","ShopTopAction"],"sourceRoot":""}