{"version":3,"file":"static/js/191.479af866.chunk.js","mappings":"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","sources":["pages/other/LoginRegister.js","wrappers/breadcrumb/Breadcrumb.js"],"sourcesContent":["import React, { Fragment, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\"; \r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport SEO from \"../../components/seo\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\r\nimport axios from 'axios';\r\n\r\nconst LoginRegister = () => {\r\n  let { pathname } = useLocation();\r\n  const [formData, setFormData] = useState({});\r\n  // var apiUrl = \"http://localhost:8001\"; //개발서버용\r\n  var apiUrl = \"\"; //운영서버용\r\n  \r\n  const loginSubmit = async(e) => {\r\n    e.preventDefault();\r\n    try{\r\n      const response = await axios.post(apiUrl+'/login',formData);\r\n      // console.log(response.data);\r\n      if(response.data.msg==1) {\r\n        alert(\"이메일을 확인해 주세요.\");\r\n      } else if(response.data.msg==2) {\r\n        alert(\"비밀번호를 확인해 주세요.\");\r\n      } else {\r\n        alert(response.data.userName+\"님 반갑습니다!\");\r\n        let sessionStorage = window.sessionStorage;\r\n        sessionStorage.setItem(\"loginId\", response.data.userId);\r\n        sessionStorage.setItem(\"loginName\", response.data.userName);\r\n        window.location.href=\"/\";\r\n\r\n      }\r\n    } catch(error){\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  const registerSubmit = async(e) => {\r\n    e.preventDefault();\r\n    try{\r\n      const response = await axios.post(apiUrl+'/register',formData);\r\n      //console.log(response.data);\r\n      if(response.data==1) {\r\n        alert(\"이미 가입된 이메일입니다.\");\r\n      } else if(response.data==2) {\r\n        alert(\"오류가 발생했습니다. 관리자에게 문의하세요.\");\r\n      } else {\r\n        alert(\"회원가입이 완료되었습니다!\");\r\n        window.location.reload();\r\n      }\r\n    } catch(error){\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <SEO\r\n        titleTemplate=\"Login\"\r\n        description=\"Login page of flone react minimalist eCommerce template.\"\r\n      />\r\n      <LayoutOne headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        <Breadcrumb \r\n          pages={[\r\n            {label: \"Home\", path: process.env.PUBLIC_URL + \"/\" },\r\n            {label: \"Login Register\", path: process.env.PUBLIC_URL + pathname }\r\n          ]} \r\n        />\r\n        <div className=\"login-register-area pt-100 pb-100\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-7 col-md-12 ms-auto me-auto\">\r\n                <div className=\"login-register-wrapper\">\r\n                  <Tab.Container defaultActiveKey=\"login\">\r\n                    <Nav variant=\"pills\" className=\"login-register-tab-list\">\r\n                      <Nav.Item>\r\n                        <Nav.Link eventKey=\"login\">\r\n                          <h4>Login</h4>\r\n                        </Nav.Link>\r\n                      </Nav.Item>\r\n                      <Nav.Item>\r\n                        <Nav.Link eventKey=\"register\">\r\n                          <h4>Register</h4>\r\n                        </Nav.Link>\r\n                      </Nav.Item>\r\n                    </Nav>\r\n                    <Tab.Content>\r\n                      <Tab.Pane eventKey=\"login\">\r\n                        <div className=\"login-form-container\">\r\n                          <div className=\"login-register-form\">\r\n                            <form method=\"POST\" action=\"\" onSubmit={loginSubmit}>\r\n                              <input\r\n                                type=\"text\"\r\n                                name=\"userMail\"\r\n                                placeholder=\"User Email\"\r\n                                onChange={handleInputChange}\r\n                              />\r\n                              <input\r\n                                type=\"password\"\r\n                                name=\"userPasswd\"\r\n                                placeholder=\"Password\"\r\n                                onChange={handleInputChange}\r\n                              />\r\n                              <div className=\"button-box\">\r\n                                <div className=\"login-toggle-btn\">\r\n                                  <input type=\"checkbox\" />\r\n                                  <label className=\"ml-10\">Remember me</label>\r\n                                  <Link to={process.env.PUBLIC_URL + \"/\"}>\r\n                                    Forgot Password?\r\n                                  </Link>\r\n                                </div>\r\n                                <button type=\"submit\">\r\n                                  <span>Login</span>\r\n                                </button>\r\n                              </div>\r\n                            </form>\r\n                          </div>\r\n                        </div>\r\n                      </Tab.Pane>\r\n                      <Tab.Pane eventKey=\"register\">\r\n                        <div className=\"login-form-container\">\r\n                          <div className=\"login-register-form\">\r\n                            <form method=\"POST\" action=\"\" onSubmit={registerSubmit}>\r\n                              <input\r\n                                name=\"email\"\r\n                                placeholder=\"Email\"\r\n                                type=\"email\"\r\n                                onChange={handleInputChange}\r\n                              />\r\n                              <input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                placeholder=\"Password\"\r\n                                onChange={handleInputChange}\r\n                              />\r\n                              <input\r\n                                type=\"password\"\r\n                                name=\"passwordchk\"\r\n                                placeholder=\"Password Check\"\r\n                                onChange={handleInputChange}\r\n                              />\r\n                              <input\r\n                                type=\"text\"\r\n                                name=\"job\"\r\n                                placeholder=\"User Job\"\r\n                                onChange={handleInputChange}\r\n                              />\r\n                              <input\r\n                                type=\"text\"\r\n                                name=\"biz\"\r\n                                placeholder=\"Business Type\"\r\n                                onChange={handleInputChange}\r\n                              />\r\n\r\n                              <div className=\"button-box\">\r\n                                <button type=\"submit\">\r\n                                  <span>Register</span>\r\n                                </button>\r\n                              </div>\r\n                            </form>\r\n                          </div>\r\n                        </div>\r\n                      </Tab.Pane>\r\n                    </Tab.Content>\r\n                  </Tab.Container>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LoginRegister;\r\n","import PropTypes from \"prop-types\";\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst BreadcrumbWrap = ({pages}) => {\r\n  return (\r\n    <div className=\"breadcrumb-area pt-35 pb-35 bg-gray-3\">\r\n      <div className=\"container\">\r\n        <Breadcrumb>\r\n            {pages?.map(({ path, label }, i) => i !== pages.length - 1 ? (\r\n                <Breadcrumb.Item key={label} linkProps={{to: path}} linkAs={Link}>\r\n                  {label}\r\n                </Breadcrumb.Item>\r\n            ) : (                \r\n              <Breadcrumb.Item key={label} active>\r\n                {label}\r\n              </Breadcrumb.Item>\r\n            ))}\r\n        </Breadcrumb>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nBreadcrumbWrap.propTypes = {\r\n  pages: PropTypes.arrayOf(PropTypes.shape({\r\n    label: PropTypes.string.isRequired,\r\n    path: PropTypes.string.isRequired\r\n  })).isRequired\r\n}\r\n\r\nexport default BreadcrumbWrap;\r\n"],"names":["pathname","useLocation","_useState","useState","_useState2","_slicedToArray","formData","setFormData","loginSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","response","sessionStorage","wrap","_context","prev","next","preventDefault","axios","post","sent","data","msg","alert","userName","window","setItem","userId","location","href","t0","console","error","stop","_x","apply","arguments","registerSubmit","_ref2","_callee2","_context2","reload","_x2","handleInputChange","_e$target","target","name","value","prevData","_objectSpread","_defineProperty","_jsxs","Fragment","children","_jsx","SEO","titleTemplate","description","LayoutOne","headerTop","Breadcrumb","pages","label","path","process","className","Tab","Container","defaultActiveKey","Nav","variant","Item","Link","eventKey","Content","Pane","method","action","onSubmit","type","placeholder","onChange","to","map","i","length","linkProps","linkAs","active"],"sourceRoot":""}