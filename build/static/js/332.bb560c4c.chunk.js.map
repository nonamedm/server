{"version":3,"file":"static/js/332.bb560c4c.chunk.js","mappings":"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","sources":["../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/ui/esm/ImperativeTransition.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/ui/esm/utils.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js"],"sourcesContent":["import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\nexport default function useWillUnmount(fn) {\n  const onUnmount = useUpdatedRef(fn);\n  useEffect(() => () => onUnmount.current(), []);\n}","import { useRef } from 'react';\n\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\nexport default function useUpdatedRef(value) {\n  const valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n  setModalAttributes(_modal) {\n    // For overriding\n  }\n  removeModalAttributes(_modal) {\n    // For overriding\n  }\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    };\n\n    // we are only interested in the actual `style` here\n    // because we will override it\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n    return modalIdx;\n  }\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n    if (modalIdx === -1) {\n      return;\n    }\n    this.modals.splice(modalIdx, 1);\n\n    // if that was the last modal in a container,\n    // clean up the container\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n    this.removeModalAttributes(modal);\n  }\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n}\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\nexport default function useWindow() {\n  return useContext(Context);\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if (ref && ('nodeType' in ref || ref.getBoundingClientRect)) return ref;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport React, { useRef, cloneElement, useState } from 'react';\nimport NoopTransition from './NoopTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTransition({\n  in: inProp,\n  onTransition\n}) {\n  const ref = useRef(null);\n  const isInitialRef = useRef(true);\n  const handleTransition = useEventCallback(onTransition);\n  useIsomorphicEffect(() => {\n    if (!ref.current) {\n      return undefined;\n    }\n    let stale = false;\n    handleTransition({\n      in: inProp,\n      element: ref.current,\n      initial: isInitialRef.current,\n      isStale: () => stale\n    });\n    return () => {\n      stale = true;\n    };\n  }, [inProp, handleTransition]);\n  useIsomorphicEffect(() => {\n    isInitialRef.current = false;\n    // this is for strict mode\n    return () => {\n      isInitialRef.current = true;\n    };\n  }, []);\n  return ref;\n}\n/**\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\n *\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\n */\nexport default function ImperativeTransition({\n  children,\n  in: inProp,\n  onExited,\n  onEntered,\n  transition\n}) {\n  const [exited, setExited] = useState(!inProp);\n\n  // TODO: I think this needs to be in an effect\n  if (inProp && exited) {\n    setExited(false);\n  }\n  const ref = useTransition({\n    in: !!inProp,\n    onTransition: options => {\n      const onFinish = () => {\n        if (options.isStale()) return;\n        if (options.in) {\n          onEntered == null ? void 0 : onEntered(options.element, options.initial);\n        } else {\n          setExited(true);\n          onExited == null ? void 0 : onExited(options.element);\n        }\n      };\n      Promise.resolve(transition(options)).then(onFinish, error => {\n        if (!options.in) setExited(true);\n        throw error;\n      });\n    }\n  });\n  const combinedRef = useMergedRefs(ref, children.ref);\n  return exited && !inProp ? null : /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n}\nexport function renderTransition(Component, runTransition, props) {\n  if (Component) {\n    return /*#__PURE__*/_jsx(Component, Object.assign({}, props));\n  }\n  if (runTransition) {\n    return /*#__PURE__*/_jsx(ImperativeTransition, Object.assign({}, props, {\n      transition: runTransition\n    }));\n  }\n  return /*#__PURE__*/_jsx(NoopTransition, Object.assign({}, props));\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const ownerWindow = useWindow();\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      var _modal$dialog$ownerDo, _modal$dialog;\n      const currentActiveElement = activeElement((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","/* eslint-disable import/prefer-default-export */\nexport function isEscKey(e) {\n  return e.code === 'Escape' || e.keyCode === 27;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop];\n    // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n  restore(prop, element) {\n    const value = element.dataset[prop];\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n}\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n});\nexport default ModalContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /** An accessible label indicating the relevant information about the Close Button. */\n  'aria-label': PropTypes.string,\n  /** A callback fired after the Close Button is clicked. */\n  onClick: PropTypes.func,\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  'aria-label': ariaLabel = 'Close',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  \"aria-label\": ariaLabel,\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nexport default CloseButton;","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel = 'Close',\n  closeVariant,\n  closeButton = false,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nexport default AbstractModalHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nexport default ModalHeader;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\n\n/* eslint-enable no-use-before-define */\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog = ModalDialog,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n  /* BaseModal props */\n\n  show = false,\n  animation = true,\n  backdrop = true,\n  keyboard = true,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null ? void 0 : onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null ? void 0 : onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});"],"names":["size","scrollbarSize","recalc","canUseDOM","scrollDiv","document","createElement","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","activeElement","doc","ownerDocument","active","nodeName","e","contains","context","node","compareDocumentPosition","OPEN_DATA_ATTRIBUTE","dataAttr","ModalManager","_ref","arguments","length","undefined","_ref$handleContainerO","handleContainerOverflow","_ref$isRTL","isRTL","_classCallCheck","this","modals","_createClass","key","window","defaultView","Math","abs","innerWidth","documentElement","getBodyScrollbarWidth","_modal","containerState","paddingProp","container","getElement","_defineProperty","scrollBarWidth","concat","parseInt","css","setAttribute","_this","_toConsumableArray","forEach","m","remove","removeAttribute","Object","assign","modal","modalIdx","indexOf","push","setModalAttributes","state","getScrollbarWidth","setContainerStyle","splice","removeContainerStyle","removeModalAttributes","Context","createContext","Provider","useWindow","useContext","resolveContainerRef","ref","getBoundingClientRect","ImperativeTransition","_ref2","children","inProp","in","onExited","onEntered","transition","_useState","useState","_useState2","_slicedToArray","exited","setExited","onTransition","isInitialRef","handleTransition","useEventCallback","useIsomorphicEffect","stale","element","initial","isStale","useTransition","options","Promise","resolve","then","error","combinedRef","useMergedRefs","cloneElement","renderTransition","Component","runTransition","props","_jsx","NoopTransition","manager","_excluded","useModalManager","provided","modalManager","getManager","dialog","backdrop","add","isTopModal","setDialogRef","useCallback","setBackdropRef","Modal","forwardRef","_ref$show","show","_ref$role","role","className","_ref$backdrop","_ref$keyboard","keyboard","onBackdropClick","onEscapeKeyDown","backdropTransition","runBackdropTransition","_ref$autoFocus","autoFocus","_ref$enforceFocus","enforceFocus","_ref$restoreFocus","restoreFocus","restoreFocusOptions","renderDialog","_ref$renderBackdrop","renderBackdrop","providedManager","containerRef","onShow","_ref$onHide","onHide","onExit","onExiting","onEnter","onEntering","rest","source","excluded","i","target","sourceKeys","keys","_objectWithoutPropertiesLoose","ownerWindow","onResolved","resolvedRef","setRef","earlyRef","nextRef","useWaitForDOMRef","isMounted","useMounted","prevShow","usePrevious","lastFocusRef","useImperativeHandle","handleShow","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","_modal$dialog$ownerDo","_modal$dialog","currentActiveElement","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","code","keyCode","isEscKey","defaultPrevented","dialogProps","tabIndex","React","unmountOnExit","mountOnEnter","appear","apply","backdropElement","onClick","_Fragment","ReactDOM","_jsxs","displayName","Manager","_get","Reflect","get","bind","property","receiver","base","object","prototype","hasOwnProperty","call","getPrototypeOf","desc","getOwnPropertyDescriptor","replaceClassName","origClass","classToRemove","replace","RegExp","sharedManager","Selector","BootstrapModalManager","_ModalManager","_inherits","_super","_createSuper","prop","adjust","actual","dataset","parseFloat","_getPrototypeOf","classList","baseVal","hasClass","marginProp","qsa","el","adjustAndStore","_this2","restore","createWithBsPrefix","ModalDialog","bsPrefix","contentClassName","centered","fullscreen","scrollable","_objectWithoutProperties","useBootstrapPrefix","dialogClass","fullScreenClass","_objectSpread","classNames","propTypes","PropTypes","variant","CloseButton","_ref$ariaLabel","ariaLabel","type","_ref$closeLabel","closeLabel","closeVariant","_ref$closeButton","closeButton","ModalContext","handleClick","ModalHeader","AbstractModalHeader","DivStyledAsH4","p","DialogTransition","Fade","timeout","BackdropTransition","dialogClassName","_ref$dialogAs","dialogAs","Dialog","ariaLabelledby","ariaDescribedby","_ref$animation","animation","backdropClassName","propsManager","modalStyle","setStyle","_useState3","_useState4","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","_useCallbackRef","useCallbackRef","_useCallbackRef2","setModalRef","mergedRef","useIsRTL","modalContext","useMemo","getModalManager","updateDialogStyle","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","BaseModal","preventDefault","isAppearing","addEventListener","onMouseUp","onMouseDown","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION"],"sourceRoot":""}