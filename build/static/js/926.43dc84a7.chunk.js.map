{"version":3,"file":"static/js/926.43dc84a7.chunk.js","mappings":"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","sources":["components/product/ShopTopFilter.js","components/product/ShopTopActionFilter.js","wrappers/product/ShopTopbarFilter.js","pages/shop/ShopGridFilter.js"],"sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  getIndividualCategories,\r\n  getIndividualTags,\r\n  getIndividualColors,\r\n  getProductsIndividualSizes,\r\n  setActiveSort\r\n} from \"../../helpers/product\";\r\n\r\nconst ShopTopFilter = ({ products, getSortParams }) => {\r\n  const uniqueCategories = getIndividualCategories(products);\r\n  const uniqueColors = getIndividualColors(products);\r\n  const uniqueSizes = getProductsIndividualSizes(products);\r\n  const uniqueTags = getIndividualTags(products);\r\n\r\n  return (\r\n    <div className=\"product-filter-wrapper\" id=\"product-filter-wrapper\">\r\n      <div className=\"product-filter-wrapper__inner\">\r\n        <div className=\"row\">\r\n          {/* Product Filter */}\r\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\r\n            <div className=\"product-filter\">\r\n              <h5>Categories</h5>\r\n              {uniqueCategories ? (\r\n                <ul>\r\n                  {uniqueCategories.map((category, key) => {\r\n                    return (\r\n                      <li key={key}>\r\n                        <button\r\n                          onClick={e => {\r\n                            getSortParams(\"category\", category);\r\n                            setActiveSort(e);\r\n                          }}\r\n                        >\r\n                          {category}\r\n                        </button>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              ) : (\r\n                \"No categories found\"\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Product Filter */}\r\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\r\n            <div className=\"product-filter\">\r\n              <h5>Color</h5>\r\n              {uniqueColors ? (\r\n                <ul>\r\n                  {uniqueColors.map((color, key) => {\r\n                    return (\r\n                      <li key={key}>\r\n                        <button\r\n                          onClick={e => {\r\n                            getSortParams(\"color\", color);\r\n                            setActiveSort(e);\r\n                          }}\r\n                        >\r\n                          {color}\r\n                        </button>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              ) : (\r\n                \"No colors found\"\r\n              )}\r\n            </div>\r\n          </div>\r\n          {/* Product Filter */}\r\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\r\n            <div className=\"product-filter\">\r\n              <h5>Size</h5>\r\n              {uniqueSizes ? (\r\n                <ul>\r\n                  {uniqueSizes.map((size, key) => {\r\n                    return (\r\n                      <li key={key}>\r\n                        <button\r\n                          className=\"text-uppercase\"\r\n                          onClick={e => {\r\n                            getSortParams(\"size\", size);\r\n                            setActiveSort(e);\r\n                          }}\r\n                        >\r\n                          {size}\r\n                        </button>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              ) : (\r\n                \"No sizes found\"\r\n              )}\r\n            </div>\r\n          </div>\r\n          {/* Product Filter */}\r\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\r\n            <div className=\"product-filter product-filter--tag\">\r\n              <h5>Tag</h5>\r\n              {uniqueTags ? (\r\n                <ul>\r\n                  {uniqueTags.map((tag, key) => {\r\n                    return (\r\n                      <li key={key}>\r\n                        <button\r\n                          onClick={e => {\r\n                            getSortParams(\"tag\", tag);\r\n                            setActiveSort(e);\r\n                          }}\r\n                        >\r\n                          {tag}\r\n                        </button>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              ) : (\r\n                \"No tags found\"\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopTopFilter.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  products: PropTypes.array\r\n};\r\n\r\nexport default ShopTopFilter;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport ShopTopFilter from \"./ShopTopFilter\";\r\nimport { toggleShopTopFilter } from \"../../helpers/product\";\r\n\r\nconst ShopTopActionFilter = ({\r\n  getFilterSortParams,\r\n  productCount,\r\n  sortedProductCount,\r\n  products,\r\n  getSortParams\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"shop-top-bar mb-35\">\r\n        <div className=\"select-shoing-wrap\">\r\n          <div className=\"shop-select\">\r\n            <select\r\n              onChange={e => getFilterSortParams(\"filterSort\", e.target.value)}\r\n            >\r\n              <option value=\"default\">Default</option>\r\n              <option value=\"priceHighToLow\">Price - High to Low</option>\r\n              <option value=\"priceLowToHigh\">Price - Low to High</option>\r\n            </select>\r\n          </div>\r\n          <p>\r\n            Showing {sortedProductCount} of {productCount} result\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"filter-active\">\r\n          <button onClick={e => toggleShopTopFilter(e)}>\r\n            <i className=\"fa fa-plus\"></i> filter\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* shop top filter */}\r\n      <ShopTopFilter products={products} getSortParams={getSortParams} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nShopTopActionFilter.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getSortParams: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  products: PropTypes.array,\r\n  sortedProductCount: PropTypes.number\r\n};\r\n\r\nexport default ShopTopActionFilter;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport ShopTopActionFilter from \"../../components/product/ShopTopActionFilter\";\r\n\r\nconst ShopTopbar = ({\r\n  getLayout,\r\n  getFilterSortParams,\r\n  productCount,\r\n  sortedProductCount,\r\n  products,\r\n  getSortParams\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      {/* shop top action */}\r\n      <ShopTopActionFilter\r\n        getLayout={getLayout}\r\n        getFilterSortParams={getFilterSortParams}\r\n        productCount={productCount}\r\n        sortedProductCount={sortedProductCount}\r\n        products={products}\r\n        getSortParams={getSortParams}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nShopTopbar.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getLayout: PropTypes.func,\r\n  getSortParams: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  products: PropTypes.array,\r\n  sortedProductCount: PropTypes.number\r\n};\r\n\r\nexport default ShopTopbar;\r\n","import { Fragment, useState, useEffect } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport Paginator from 'react-hooks-paginator';\r\nimport { useLocation } from \"react-router-dom\"\r\nimport { getSortedProducts } from '../../helpers/product';\r\nimport SEO from \"../../components/seo\";\r\nimport LayoutOne from '../../layouts/LayoutOne';\r\nimport Breadcrumb from '../../wrappers/breadcrumb/Breadcrumb';\r\nimport ShopTopbarFilter from '../../wrappers/product/ShopTopbarFilter';\r\nimport ShopProducts from '../../wrappers/product/ShopProducts';\r\n\r\nconst ShopGridFilter = () => {\r\n    const [layout, setLayout] = useState('grid three-column');\r\n    const [sortType, setSortType] = useState('');\r\n    const [sortValue, setSortValue] = useState('');\r\n    const [filterSortType, setFilterSortType] = useState('');\r\n    const [filterSortValue, setFilterSortValue] = useState('');\r\n    const [offset, setOffset] = useState(0);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [currentData, setCurrentData] = useState([]);\r\n    const [sortedProducts, setSortedProducts] = useState([]);\r\n    const { products } = useSelector((state) => state.product);\r\n\r\n    const pageLimit = 15;\r\n    let { pathname } = useLocation();\r\n\r\n    const getLayout = (layout) => {\r\n        setLayout(layout)\r\n    }\r\n\r\n    const getSortParams = (sortType, sortValue) => {\r\n        setSortType(sortType);\r\n        setSortValue(sortValue);\r\n    }\r\n\r\n    const getFilterSortParams = (sortType, sortValue) => {\r\n        setFilterSortType(sortType);\r\n        setFilterSortValue(sortValue);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let sortedProducts = getSortedProducts(products, sortType, sortValue);\r\n        const filterSortedProducts = getSortedProducts(sortedProducts, filterSortType, filterSortValue);\r\n        sortedProducts = filterSortedProducts;\r\n        setSortedProducts(sortedProducts);\r\n        setCurrentData(sortedProducts.slice(offset, offset + pageLimit));\r\n    }, [offset, products, sortType, sortValue, filterSortType, filterSortValue ]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <SEO\r\n                titleTemplate=\"Shop Page\"\r\n                description=\"Shop page of flone react minimalist eCommerce template.\"\r\n            />\r\n\r\n            <LayoutOne headerTop=\"visible\">\r\n                {/* breadcrumb */}\r\n                <Breadcrumb \r\n                    pages={[\r\n                        {label: \"Home\", path: process.env.PUBLIC_URL + \"/\" },\r\n                        {label: \"Shop\", path: process.env.PUBLIC_URL + pathname }\r\n                    ]} \r\n                />\r\n\r\n                <div className=\"shop-area pt-95 pb-100\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                {/* shop topbar filter */}\r\n                                <ShopTopbarFilter getLayout={getLayout} getFilterSortParams={getFilterSortParams} productCount={products.length} sortedProductCount={currentData.length} products={products} getSortParams={getSortParams}/>\r\n\r\n                                {/* shop page content default */}\r\n                                <ShopProducts layout={layout} products={currentData} />\r\n\r\n                                {/* shop product pagination */}\r\n                                <div className=\"pro-pagination-style text-center mt-30\">\r\n                                    <Paginator\r\n                                        totalRecords={sortedProducts.length}\r\n                                        pageLimit={pageLimit}\r\n                                        pageNeighbours={2}\r\n                                        setOffset={setOffset}\r\n                                        currentPage={currentPage}\r\n                                        setCurrentPage={setCurrentPage}\r\n                                        pageContainerClass=\"mb-0 mt-0\"\r\n                                        pagePrevText=\"«\"\r\n                                        pageNextText=\"»\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </LayoutOne>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ShopGridFilter;"],"names":["_ref","products","getSortParams","uniqueCategories","getIndividualCategories","uniqueColors","getIndividualColors","uniqueSizes","getProductsIndividualSizes","uniqueTags","getIndividualTags","_jsx","className","id","children","_jsxs","map","category","key","onClick","e","setActiveSort","color","size","tag","getFilterSortParams","productCount","sortedProductCount","Fragment","onChange","target","value","toggleShopTopFilter","ShopTopFilter","getLayout","ShopTopActionFilter","_useState","useState","_useState2","_slicedToArray","layout","setLayout","_useState3","_useState4","sortType","setSortType","_useState5","_useState6","sortValue","setSortValue","_useState7","_useState8","filterSortType","setFilterSortType","_useState9","_useState10","filterSortValue","setFilterSortValue","_useState11","_useState12","offset","setOffset","_useState13","_useState14","currentPage","setCurrentPage","_useState15","_useState16","currentData","setCurrentData","_useState17","_useState18","sortedProducts","setSortedProducts","useSelector","state","product","pathname","useLocation","useEffect","getSortedProducts","filterSortedProducts","slice","SEO","titleTemplate","description","LayoutOne","headerTop","Breadcrumb","pages","label","path","process","ShopTopbarFilter","length","ShopProducts","Paginator","totalRecords","pageLimit","pageNeighbours","pageContainerClass","pagePrevText","pageNextText"],"sourceRoot":""}