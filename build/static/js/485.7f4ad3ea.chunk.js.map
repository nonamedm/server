{"version":3,"file":"static/js/485.7f4ad3ea.chunk.js","mappings":"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","sources":["pages/shop/ShopGridFilter2.js","components/product/ShopTopFilter.js","components/product/ShopTopActionFilter.js","wrappers/product/ShopTopbarFilter.js"],"sourcesContent":["import { Fragment, useState, useEffect } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport Paginator from 'react-hooks-paginator';\r\nimport { useLocation } from \"react-router-dom\"\r\nimport { getSortedProducts } from '../../helpers/product';\r\nimport SEO from \"../../components/seo\";\r\nimport LayoutOne from '../../layouts/LayoutOne';\r\nimport Breadcrumb from '../../wrappers/breadcrumb/Breadcrumb';\r\nimport ShopTopbarFilter from '../../wrappers/product/ShopTopbarFilter';\r\nimport ShopProducts from '../../wrappers/product/ShopProducts';\r\n\r\nconst ShopGridFilter = () => {\r\n    const [layout, setLayout] = useState('grid three-column');\r\n    const [sortType, setSortType] = useState('');\r\n    const [sortValue, setSortValue] = useState('');\r\n    const [filterSortType, setFilterSortType] = useState('');\r\n    const [filterSortValue, setFilterSortValue] = useState('');\r\n    const [offset, setOffset] = useState(0);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [currentData, setCurrentData] = useState([]);\r\n    const [sortedProducts, setSortedProducts] = useState([]);\r\n    const { products } = useSelector((state) => state.product);\r\n\r\n    const pageLimit = 15;\r\n    let { pathname } = useLocation();\r\n\r\n    const getLayout = (layout) => {\r\n        setLayout(layout)\r\n    }\r\n\r\n    const getSortParams = (sortType, sortValue) => {\r\n        setSortType(sortType);\r\n        setSortValue(sortValue);\r\n    }\r\n\r\n    const getFilterSortParams = (sortType, sortValue) => {\r\n        setFilterSortType(sortType);\r\n        setFilterSortValue(sortValue);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let sortedProducts = getSortedProducts(products, sortType, sortValue);\r\n        const filterSortedProducts = getSortedProducts(sortedProducts, filterSortType, filterSortValue);\r\n        sortedProducts = filterSortedProducts;\r\n        setSortedProducts(sortedProducts);\r\n        setCurrentData(sortedProducts.slice(offset, offset + pageLimit));\r\n    }, [offset, products, sortType, sortValue, filterSortType, filterSortValue ]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <SEO\r\n                titleTemplate=\"Shop Page\"\r\n                description=\"Shop page of flone react minimalist eCommerce template.\"\r\n            />\r\n\r\n            <LayoutOne headerTop=\"visible\">\r\n                {/* breadcrumb */}\r\n                <Breadcrumb \r\n                    pages={[\r\n                        {label: \"Home\", path: process.env.PUBLIC_URL + \"/\" },\r\n                        {label: \"Shop\", path: process.env.PUBLIC_URL + pathname }\r\n                    ]} \r\n                />\r\n\r\n                <div className=\"shop-area pt-95 pb-100\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                {/* shop topbar filter */}\r\n                                <ShopTopbarFilter getLayout={getLayout} getFilterSortParams={getFilterSortParams} productCount={products.length} sortedProductCount={currentData.length} products={products} getSortParams={getSortParams}/>\r\n\r\n                                {/* shop page content default */}\r\n                                <ShopProducts layout={layout} products={currentData} />\r\n\r\n                                {/* shop product pagination */}\r\n                                <div className=\"pro-pagination-style text-center mt-30\">\r\n                                    <Paginator\r\n                                        totalRecords={sortedProducts.length}\r\n                                        pageLimit={pageLimit}\r\n                                        pageNeighbours={2}\r\n                                        setOffset={setOffset}\r\n                                        currentPage={currentPage}\r\n                                        setCurrentPage={setCurrentPage}\r\n                                        pageContainerClass=\"mb-0 mt-0\"\r\n                                        pagePrevText=\"«\"\r\n                                        pageNextText=\"»\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </LayoutOne>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ShopGridFilter;","import PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  getIndividualCategories,\r\n  getIndividualTags,\r\n  getIndividualColors,\r\n  getProductsIndividualSizes,\r\n  setActiveSort\r\n} from \"../../helpers/product\";\r\n\r\nconst ShopTopFilter = ({ products, getSortParams }) => {\r\n  const uniqueCategories = getIndividualCategories(products);\r\n  const uniqueColors = getIndividualColors(products);\r\n  const uniqueSizes = getProductsIndividualSizes(products);\r\n  const uniqueTags = getIndividualTags(products);\r\n\r\n  return (\r\n    <div className=\"product-filter-wrapper\" id=\"product-filter-wrapper\">\r\n      <div className=\"product-filter-wrapper__inner\">\r\n        <div className=\"row\">\r\n          {/* Product Filter */}\r\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\r\n            <div className=\"product-filter\">\r\n              <h5>Categories</h5>\r\n              {uniqueCategories ? (\r\n                <ul>\r\n                  {uniqueCategories.map((category, key) => {\r\n                    return (\r\n                      <li key={key}>\r\n                        <button\r\n                          onClick={e => {\r\n                            getSortParams(\"category\", category);\r\n                            setActiveSort(e);\r\n                          }}\r\n                        >\r\n                          {category}\r\n                        </button>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              ) : (\r\n                \"No categories found\"\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Product Filter */}\r\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\r\n            <div className=\"product-filter\">\r\n              <h5>Color</h5>\r\n              {uniqueColors ? (\r\n                <ul>\r\n                  {uniqueColors.map((color, key) => {\r\n                    return (\r\n                      <li key={key}>\r\n                        <button\r\n                          onClick={e => {\r\n                            getSortParams(\"color\", color);\r\n                            setActiveSort(e);\r\n                          }}\r\n                        >\r\n                          {color}\r\n                        </button>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              ) : (\r\n                \"No colors found\"\r\n              )}\r\n            </div>\r\n          </div>\r\n          {/* Product Filter */}\r\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\r\n            <div className=\"product-filter\">\r\n              <h5>Size</h5>\r\n              {uniqueSizes ? (\r\n                <ul>\r\n                  {uniqueSizes.map((size, key) => {\r\n                    return (\r\n                      <li key={key}>\r\n                        <button\r\n                          className=\"text-uppercase\"\r\n                          onClick={e => {\r\n                            getSortParams(\"size\", size);\r\n                            setActiveSort(e);\r\n                          }}\r\n                        >\r\n                          {size}\r\n                        </button>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              ) : (\r\n                \"No sizes found\"\r\n              )}\r\n            </div>\r\n          </div>\r\n          {/* Product Filter */}\r\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\r\n            <div className=\"product-filter product-filter--tag\">\r\n              <h5>Tag</h5>\r\n              {uniqueTags ? (\r\n                <ul>\r\n                  {uniqueTags.map((tag, key) => {\r\n                    return (\r\n                      <li key={key}>\r\n                        <button\r\n                          onClick={e => {\r\n                            getSortParams(\"tag\", tag);\r\n                            setActiveSort(e);\r\n                          }}\r\n                        >\r\n                          {tag}\r\n                        </button>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              ) : (\r\n                \"No tags found\"\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopTopFilter.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  products: PropTypes.array\r\n};\r\n\r\nexport default ShopTopFilter;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport ShopTopFilter from \"./ShopTopFilter\";\r\nimport { toggleShopTopFilter } from \"../../helpers/product\";\r\n\r\nconst ShopTopActionFilter = ({\r\n  getFilterSortParams,\r\n  productCount,\r\n  sortedProductCount,\r\n  products,\r\n  getSortParams\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"shop-top-bar mb-35\">\r\n        <div className=\"select-shoing-wrap\">\r\n          <div className=\"shop-select\">\r\n            <select\r\n              onChange={e => getFilterSortParams(\"filterSort\", e.target.value)}\r\n            >\r\n              <option value=\"default\">Default</option>\r\n              <option value=\"priceHighToLow\">Price - High to Low</option>\r\n              <option value=\"priceLowToHigh\">Price - Low to High</option>\r\n            </select>\r\n          </div>\r\n          <p>\r\n            Showing {sortedProductCount} of {productCount} result\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"filter-active\">\r\n          <button onClick={e => toggleShopTopFilter(e)}>\r\n            <i className=\"fa fa-plus\"></i> filter\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* shop top filter */}\r\n      <ShopTopFilter products={products} getSortParams={getSortParams} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nShopTopActionFilter.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getSortParams: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  products: PropTypes.array,\r\n  sortedProductCount: PropTypes.number\r\n};\r\n\r\nexport default ShopTopActionFilter;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport ShopTopActionFilter from \"../../components/product/ShopTopActionFilter\";\r\n\r\nconst ShopTopbar = ({\r\n  getLayout,\r\n  getFilterSortParams,\r\n  productCount,\r\n  sortedProductCount,\r\n  products,\r\n  getSortParams\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      {/* shop top action */}\r\n      <ShopTopActionFilter\r\n        getLayout={getLayout}\r\n        getFilterSortParams={getFilterSortParams}\r\n        productCount={productCount}\r\n        sortedProductCount={sortedProductCount}\r\n        products={products}\r\n        getSortParams={getSortParams}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nShopTopbar.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getLayout: PropTypes.func,\r\n  getSortParams: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  products: PropTypes.array,\r\n  sortedProductCount: PropTypes.number\r\n};\r\n\r\nexport default ShopTopbar;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","layout","setLayout","_useState3","_useState4","sortType","setSortType","_useState5","_useState6","sortValue","setSortValue","_useState7","_useState8","filterSortType","setFilterSortType","_useState9","_useState10","filterSortValue","setFilterSortValue","_useState11","_useState12","offset","setOffset","_useState13","_useState14","currentPage","setCurrentPage","_useState15","_useState16","currentData","setCurrentData","_useState17","_useState18","sortedProducts","setSortedProducts","products","useSelector","state","product","pathname","useLocation","useEffect","getSortedProducts","filterSortedProducts","slice","_jsxs","Fragment","children","_jsx","SEO","titleTemplate","description","LayoutOne","headerTop","Breadcrumb","pages","label","path","process","className","ShopTopbarFilter","getLayout","getFilterSortParams","productCount","length","sortedProductCount","getSortParams","ShopProducts","Paginator","totalRecords","pageLimit","pageNeighbours","pageContainerClass","pagePrevText","pageNextText","_ref","uniqueCategories","getIndividualCategories","uniqueColors","getIndividualColors","uniqueSizes","getProductsIndividualSizes","uniqueTags","getIndividualTags","id","map","category","key","onClick","e","setActiveSort","color","size","tag","onChange","target","value","toggleShopTopFilter","ShopTopFilter","ShopTopActionFilter"],"sourceRoot":""}